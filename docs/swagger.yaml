basePath: /
definitions:
  controller.errorResponse:
    properties:
      error_code:
        type: integer
      error_message:
        type: string
    type: object
  controller.jsonResponse:
    properties:
      code:
        type: integer
      data: {}
      error:
        $ref: '#/definitions/controller.errorResponse'
      message:
        type: string
    type: object
  response.ElectionVoteResultResponse:
    properties:
      confirmed_votes:
        type: integer
      election_pair_id:
        type: string
      error_votes:
        type: integer
      last_updated:
        type: string
      pending_votes:
        type: integer
      region:
        type: string
      total_votes:
        type: integer
    type: object
  response.RegionVoteResultResponse:
    properties:
      confirmed_votes:
        type: integer
      error_votes:
        type: integer
      last_updated:
        type: string
      pending_votes:
        type: integer
      region:
        type: string
      total_votes:
        type: integer
    type: object
  response.VoteResultResponse:
    properties:
      created_at:
        type: string
      election_pair_id:
        type: string
      error_message:
        type: string
      id:
        type: string
      processed_at:
        type: string
      region:
        type: string
      status:
        type: string
      transaction_hash:
        type: string
      updated_at:
        type: string
      voted_at:
        type: string
      voter_id:
        type: string
    type: object
  response.VoteStatisticsResponse:
    properties:
      confirmed_votes:
        type: integer
      error_votes:
        type: integer
      last_updated:
        type: string
      pending_votes:
        type: integer
      success_rate:
        type: number
      total_votes:
        type: integer
    type: object
info:
  contact: {}
  description: Result Service.
  title: Result Service
  version: 1.0.0
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Ping to check health
      parameters:
      - description: user that make request
        in: header
        name: X-User-Id
        type: string
      - default: web
        description: channel where request comes from
        in: header
        name: X-Channel-Id
        type: string
      - description: request unique identifier
        in: header
        name: X-Request-Id
        type: string
      - description: user account
        in: header
        name: X-Account-Id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.jsonResponse'
      summary: Ping
      tags:
      - Health
  /v1/results/elections/{election_pair_id}:
    get:
      consumes:
      - application/json
      description: Get detailed election results for a specific election pair
      parameters:
      - description: Election Pair ID
        in: path
        name: election_pair_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Election results data
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.ElectionVoteResultResponse'
              type: object
      summary: Get election results by election pair ID
      tags:
      - Results
  /v1/results/elections/{election_pair_id}/count:
    get:
      consumes:
      - application/json
      description: Count the number of votes for a specific election pair
      parameters:
      - description: Election Pair ID
        in: path
        name: election_pair_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Count of votes
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      summary: Count votes by election pair ID
      tags:
      - Results
  /v1/results/elections/{election_pair_id}/votes:
    get:
      consumes:
      - application/json
      description: Get all vote results for a specific election pair
      parameters:
      - description: Election Pair ID
        in: path
        name: election_pair_id
        required: true
        type: string
      - default: 50
        description: Limit the number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of vote results
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.VoteResultResponse'
                  type: array
              type: object
      summary: Get vote results by election pair ID
      tags:
      - Results
  /v1/results/regions:
    get:
      consumes:
      - application/json
      description: Get statistical data for all regions
      produces:
      - application/json
      responses:
        "200":
          description: List of region statistics
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.RegionVoteResultResponse'
                  type: array
              type: object
      summary: Get region statistics
      tags:
      - Results
  /v1/results/regions/{region}:
    get:
      consumes:
      - application/json
      description: Get detailed region results for a specific region
      parameters:
      - description: Region
        in: path
        name: region
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Region results data
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.RegionVoteResultResponse'
              type: object
      summary: Get region results by region
      tags:
      - Results
  /v1/results/regions/{region}/count:
    get:
      consumes:
      - application/json
      description: Count the number of votes in a specific region
      parameters:
      - description: Region
        in: path
        name: region
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Count of votes
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      summary: Count votes by region
      tags:
      - Results
  /v1/results/regions/{region}/elections:
    get:
      consumes:
      - application/json
      description: Get detailed election results for a specific region
      parameters:
      - description: Region
        in: path
        name: region
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of election results
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ElectionVoteResultResponse'
                  type: array
              type: object
      summary: Get election results by region
      tags:
      - Results
  /v1/results/regions/{region}/votes:
    get:
      consumes:
      - application/json
      description: Get all vote results for a specific region
      parameters:
      - description: Region
        in: path
        name: region
        required: true
        type: string
      - default: 50
        description: Limit the number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of vote results
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.VoteResultResponse'
                  type: array
              type: object
      summary: Get vote results by region
      tags:
      - Results
  /v1/results/statistics:
    get:
      consumes:
      - application/json
      description: Get overall vote statistics including total votes, valid votes,
        and invalid votes
      produces:
      - application/json
      responses:
        "200":
          description: Overall vote statistics data
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.VoteStatisticsResponse'
              type: object
      summary: Get overall vote statistics
      tags:
      - Results
  /v1/results/statistics/daily:
    get:
      consumes:
      - application/json
      description: Get daily vote statistics for a specified date range
      parameters:
      - description: Start date in YYYY-MM-DD format
        in: query
        name: start_date
        required: true
        type: string
      - description: End date in YYYY-MM-DD format
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of daily vote statistics
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.VoteStatisticsResponse'
                  type: array
              type: object
      summary: Get daily vote statistics
      tags:
      - Results
  /v1/results/votes:
    get:
      consumes:
      - application/json
      description: Get all vote results with a specific status
      parameters:
      - description: Vote Result Status
        in: query
        name: status
        required: true
        type: string
      - default: 50
        description: Limit the number of results
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of vote results
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.VoteResultResponse'
                  type: array
              type: object
      summary: Get vote results by status
      tags:
      - Results
  /v1/results/votes/{id}:
    get:
      consumes:
      - application/json
      description: Get a specific vote result by its ID
      parameters:
      - description: Vote Result ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Vote result data
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.VoteResultResponse'
              type: object
      summary: Get vote result by ID
      tags:
      - Results
  /v1/results/votes/count:
    get:
      consumes:
      - application/json
      description: Count the number of votes with a specific status
      parameters:
      - description: Vote Result Status
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Count of votes
          schema:
            allOf:
            - $ref: '#/definitions/controller.jsonResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      summary: Count votes by status
      tags:
      - Results
swagger: "2.0"
